import telebot
import os
import google.generativeai as genai
from flask import Flask, request

# --- –ù–ê–°–¢–†–û–ô–ö–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò ---
# –ë–µ—Ä–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Vercel. –≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ.
TELEGRAM_TOKEN = os.environ.get('TELEGRAM_TOKEN')
GEMINI_API_KEY = os.environ.get('GEMINI_API_KEY')

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
bot = telebot.TeleBot(TELEGRAM_TOKEN)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á Gemini API –¥–æ—Å—Ç—É–ø–µ–Ω
if not GEMINI_API_KEY:
    # –≠—Ç–∞ –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –≤–∏–¥–Ω–∞ –≤ –ª–æ–≥–∞—Ö Vercel, –µ—Å–ª–∏ –≤—ã –∑–∞–±—É–¥–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω GEMINI_API_KEY. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Vercel.")

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º API Gemini
genai.configure(api_key=GEMINI_API_KEY)
# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—É—é —Å–≤–µ–∂—É—é –∏ –º–æ—â–Ω—É—é –º–æ–¥–µ–ª—å
model = genai.GenerativeModel('gemini-2.5-flash')


# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î TELEGRAM ---

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = telebot.types.KeyboardButton("üëã –ü—Ä–∏–≤–µ—Ç!")
    markup.add(item1)
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç! –Ø —á–∞—Ç-–±–æ—Ç –Ω–∞ –±–∞–∑–µ Google Gemini 1.5 Pro. –ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å.",
                     reply_markup=markup)

@bot.message_handler(content_types=['text'])
def handle_text(message):
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""

    # 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
    # –≠—Ç–æ –¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–Ω—è—Ç—å, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç –≤ —Ä–∞–±–æ—Ç—É
    placeholder_message = bot.send_message(message.chat.id, "‚è≥ –î—É–º–∞—é –Ω–∞–¥ –≤–∞—à–∏–º –≤–æ–ø—Ä–æ—Å–æ–º...")

    try:
        # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Gemini
        # –ú—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª—å—à–µ –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞, –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.
        # –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –±–æ—Ç–∞ –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–º –Ω–∞ stateless –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –≤—Ä–æ–¥–µ Vercel.
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å: {message.text}") # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        response = model.generate_content(message.text)
        
        # 3. –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É, –∑–∞–º–µ–Ω—è—è –µ–≥–æ –Ω–∞ –æ—Ç–≤–µ—Ç –æ—Ç Gemini
        bot.edit_message_text(chat_id=placeholder_message.chat.id,
                              message_id=placeholder_message.message_id,
                              text=response.text)

    except Exception as e:
        # 4. –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –µ–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ Vercel
        print(f"!!! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        error_text = (
            "üò• –û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Gemini.\n\n"
            "–í–æ–∑–º–æ–∂–Ω–æ, –≤ –º–æ–µ–º –æ—Ç–≤–µ—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–ª—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n\n"
            f"**–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n`{e}`"
        )
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É, –∑–∞–º–µ–Ω—è—è –µ–≥–æ –Ω–∞ —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
        bot.edit_message_text(chat_id=placeholder_message.chat.id,
                              message_id=placeholder_message.message_id,
                              text=error_text,
                              parse_mode='Markdown')


# --- –°–ï–ö–¶–ò–Ø –î–õ–Ø –†–ê–ë–û–¢–´ –ù–ê VERSEL ---
app = Flask(__name__)

@app.route('/' + TELEGRAM_TOKEN, methods=['POST'])
def getMessage():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return "!", 200

@app.route("/")
def webhook():
    bot.remove_webhook()
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π VERCEL_URL
    bot.set_webhook(url=f'https://{os.environ.get("VERCEL_URL")}/{TELEGRAM_TOKEN}')
    return "–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", 200